<?xml version="1.0" encoding="UTF-8"?>
<pd:ProcessDefinition xmlns:tib="http://www.tibco.com/bw/xslt/custom-functions" xmlns:pfx="http://www.tibco.com/schemas/Suply/SharedConnections/Schema.xsd" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns="http://xmlns.tibco.com/bw/activity/xml/render/bytesEnvelope/2003/05" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:pd="http://xmlns.tibco.com/bw/process/2003">
    <xsd:import namespace="http://www.tibco.com/schemas/Suply/SharedConnections/Schema.xsd" schemaLocation="/SharedConnections/Schema.xsd"/>
    <pd:name>BusinessProcess/StarterProcess/Start_Supply.process</pd:name>
    <pd:startName>HTTP Receiver</pd:startName>
    <pd:startX>0</pd:startX>
    <pd:startY>0</pd:startY>
    <pd:returnBindings/>
    <pd:starter name="HTTP Receiver">
        <pd:type>com.tibco.plugin.http.HTTPEventSource</pd:type>
        <pd:resourceType>httppalette.httpEventSource</pd:resourceType>
        <pd:x>47</pd:x>
        <pd:y>132</pd:y>
        <config>
            <outputMode>String</outputMode>
            <defaultEncoding>ISO8859_1</defaultEncoding>
            <inputOutputVersion>5.3.0</inputOutputVersion>
            <newMimeSupport>true</newMimeSupport>
            <sharedChannel>/SharedConnections/HTTP Connection.sharedhttp</sharedChannel>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Accept" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Charset" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Accept-Encoding" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Length" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Connection" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings/>
    </pd:starter>
    <pd:endName>End</pd:endName>
    <pd:endX>956</pd:endX>
    <pd:endY>143</pd:endY>
    <pd:errorSchemas/>
    <pd:processVariables/>
    <pd:targetNamespace>http://xmlns.example.com/1714764088824</pd:targetNamespace>
    <pd:activity name="Log_Start">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>139</pd:x>
        <pd:y>134</pd:y>
        <config>
            <processName>/BusinessProcess/Logging_Process.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <LoggingMessage>
                    <xsl:value-of select="&quot;Process Start_Supply Started&quot;"/>
                </LoggingMessage>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Log_End">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>865</pd:x>
        <pd:y>142</pd:y>
        <config>
            <processName>/BusinessProcess/Logging_Process.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <LoggingMessage>
                    <xsl:value-of select="&quot;Process Start_Supply Ended&quot;"/>
                </LoggingMessage>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>393</pd:x>
        <pd:y>138</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="Insert_Process">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>522</pd:x>
        <pd:y>43</pd:y>
        <config>
            <processName>/BusinessProcess/SubProcess/Insert_Process.process</processName>
        </config>
        <pd:inputBindings>
            <root>
                <InsertDetails>
                    <xsl:value-of select="$Render-XML/xmlString"/>
                </InsertDetails>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Fetch_Process">
        <pd:type>com.tibco.pe.core.CallProcessActivity</pd:type>
        <pd:resourceType>ae.process.subprocess</pd:resourceType>
        <pd:x>525</pd:x>
        <pd:y>145</pd:y>
        <config>
            <processName>/BusinessProcess/SubProcess/Fetch_Process.process</processName>
        </config>
        <pd:inputBindings>
            <root/>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Send HTTP Response">
        <pd:type>com.tibco.plugin.http.HTTPResponseActivity</pd:type>
        <pd:resourceType>httppalette.httpWebResponse</pd:resourceType>
        <pd:x>760</pd:x>
        <pd:y>141</pd:y>
        <config>
            <closeConnection>true</closeConnection>
            <eventSource>HTTP Receiver</eventSource>
            <Headers>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="StatusLine" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Content-Type" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Set-Cookie" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Pragma" type="xsd:string" minOccurs="0"/>
                            <xsd:element name="Location" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </Headers>
        </config>
        <pd:inputBindings>
            <ResponseActivityInput>
                <xsl:choose>
                    <xsl:when test="contains($HTTP-Receiver/ProcessStarterOutput/Method, 'POST')&#xA;or &#xA;contains($HTTP-Receiver/ProcessStarterOutput/Method, 'PUT')">
                        <xsl:if test="$Insert_Process/root/Responce">
                            <asciiContent>
                                <xsl:value-of select="$Insert_Process/root/Responce"/>
                            </asciiContent>
                        </xsl:if>
                    </xsl:when>
                    <xsl:when test="contains($HTTP-Receiver/ProcessStarterOutput/Method, 'GET')">
                        <asciiContent>
                            <xsl:value-of select="&quot;&quot;"/>
                        </asciiContent>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:if test="$InvalidMethod/root/Method">
                            <asciiContent>
                                <xsl:value-of select="$InvalidMethod/root/Method"/>
                            </asciiContent>
                        </xsl:if>
                    </xsl:otherwise>
                </xsl:choose>
            </ResponseActivityInput>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="InvalidMethod">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>533</pd:x>
        <pd:y>280</pd:y>
        <config>
            <element>
                <xsd:element name="root">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="Method" type="xsd:string" minOccurs="0"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>
            </element>
        </config>
        <pd:inputBindings>
            <root>
                <Method>
                    <xsl:value-of select="&quot;Invalid Method&quot;"/>
                </Method>
            </root>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Null-1">
        <pd:type>com.tibco.plugin.timer.NullActivity</pd:type>
        <pd:resourceType>ae.activities.null</pd:resourceType>
        <pd:x>657</pd:x>
        <pd:y>141</pd:y>
        <config/>
        <pd:inputBindings/>
    </pd:activity>
    <pd:activity name="ArrangeData">
        <pd:type>com.tibco.plugin.mapper.MapperActivity</pd:type>
        <pd:resourceType>ae.activities.MapperActivity</pd:resourceType>
        <pd:x>224</pd:x>
        <pd:y>135</pd:y>
        <config>
            <element ref="pfx:SUPPLY"/>
        </config>
        <pd:inputBindings>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="ExtractCurrentDate" select="tib:get-day-from-date(current-date())"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="ExtractCurrentMonth" select="tib:get-month-from-date(current-date())"/>
            <xsl:variable xmlns:xsl="http://www.w3.org/1999/XSL/Transform" name="ExtractCurrentYear" select="tib:get-year-from-date(current-date())"/>
            <pfx:SUPPLY>
                <pfx:SHOP>
                    <xsl:value-of select="substring-after(substring-before(substring-before(tib:substring-before-last(substring-after(substring-after($HTTP-Receiver/ProcessStarterOutput/PostData, '{'),'{'), '}'), '}'), ','), ':')"/>
                </pfx:SHOP>
                <pfx:ITEM>
                    <xsl:value-of select="substring-before(tib:substring-before-last(tib:substring-before-last(substring-after(substring-after(substring-after(substring-after($HTTP-Receiver/ProcessStarterOutput/PostData, '{'),'{'),','),':'), '}'), '}'), ',')"/>
                </pfx:ITEM>
                <pfx:AVLQNTY>
                    <xsl:value-of select="substring-after(substring-before(substring-after(tib:substring-before-last(tib:substring-before-last(substring-after(substring-after(substring-after(substring-after($HTTP-Receiver/ProcessStarterOutput/PostData, '{'),'{'),','),':'), '}'), '}'), ','), ','),':')"/>
                </pfx:AVLQNTY>
                <pfx:STATE>
                    <xsl:value-of select="substring-after(substring-before(substring-after(substring-after(tib:substring-before-last(tib:substring-before-last(substring-after(substring-after(substring-after(substring-after($HTTP-Receiver/ProcessStarterOutput/PostData, '{'),'{'),','),':'), '}'), '}'), ','),','),','),':')"/>
                </pfx:STATE>
                <pfx:COUNTRY>
                    <xsl:value-of select="substring-after(substring-after(tib:substring-before-last(substring-after(substring-after(tib:substring-before-last(tib:substring-before-last(substring-after(substring-after(substring-after(substring-after($HTTP-Receiver/ProcessStarterOutput/PostData, '{'),'{'),','),':'), '}'), '}'), ','),','), ','), ','),':')"/>
                </pfx:COUNTRY>
                <pfx:LASTUPDATEDON>
                    <xsl:value-of select="tib:create-date($ExtractCurrentYear, $ExtractCurrentMonth, $ExtractCurrentDate)"/>
                </pfx:LASTUPDATEDON>
            </pfx:SUPPLY>
        </pd:inputBindings>
    </pd:activity>
    <pd:activity name="Render XML">
        <pd:type>com.tibco.plugin.xml.XMLRendererActivity</pd:type>
        <pd:resourceType>ae.activities.XMLRendererActivity</pd:resourceType>
        <pd:x>305</pd:x>
        <pd:y>135</pd:y>
        <config>
            <renderAsText>text</renderAsText>
            <validateInput>false</validateInput>
            <term ref="pfx:SUPPLY"/>
        </config>
        <pd:inputBindings>
            <xsl:copy-of select="$ArrangeData/pfx:SUPPLY"/>
        </pd:inputBindings>
    </pd:activity>
    <pd:transition>
        <pd:from>HTTP Receiver</pd:from>
        <pd:to>Log_Start</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>Insert_Process</pd:to>
        <pd:xpathDescription>POST/PUT</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>contains($HTTP-Receiver/ProcessStarterOutput/Method, "POST") or
contains($HTTP-Receiver/ProcessStarterOutput/Method, "PUT")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>Fetch_Process</pd:to>
        <pd:xpathDescription>GET</pd:xpathDescription>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>xpath</pd:conditionType>
        <pd:xpath>contains($HTTP-Receiver/ProcessStarterOutput/Method, "GET")</pd:xpath>
    </pd:transition>
    <pd:transition>
        <pd:from>Insert_Process</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Fetch_Process</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_End</pd:from>
        <pd:to>End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Send HTTP Response</pd:from>
        <pd:to>Log_End</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null</pd:from>
        <pd:to>InvalidMethod</pd:to>
        <pd:lineType>Straight</pd:lineType>
        <pd:lineColor>-65485</pd:lineColor>
        <pd:conditionType>otherwise</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>InvalidMethod</pd:from>
        <pd:to>Null-1</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Null-1</pd:from>
        <pd:to>Send HTTP Response</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Log_Start</pd:from>
        <pd:to>ArrangeData</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>ArrangeData</pd:from>
        <pd:to>Render XML</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
    <pd:transition>
        <pd:from>Render XML</pd:from>
        <pd:to>Null</pd:to>
        <pd:lineType>Default</pd:lineType>
        <pd:lineColor>-16777216</pd:lineColor>
        <pd:conditionType>always</pd:conditionType>
    </pd:transition>
</pd:ProcessDefinition>